name: GitHub CI

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: df
        run: df -h

      - name: free
        run: free -h

      - name: cpuinfo
        run: lscpu

      - name: systemd-detect-virt
        run: systemd-detect-virt

      - name: Modify sources.list
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          echo deb http://azure.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse | sudo tee /etc/apt/sources.list
          echo deb http://azure.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse | sudo tee -a /etc/apt/sources.list
          echo deb http://azure.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse | sudo tee -a /etc/apt/sources.list
          echo deb http://azure.archive.ubuntu.com/ubuntu/ bionic-proposed main restricted universe multiverse | sudo tee -a /etc/apt/sources.list
          echo deb http://azure.archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse | sudo tee -a /etc/apt/sources.list

      - name: Install required packages
        run: sudo apt update && sudo apt-get install -y qemu-system-x86 sshpass

      - name: download kali
        run: |
          iso=$(curl -skL http://cdimage.kali.org/kali-weekly/ | awk -F'"' '/kali-linux-[0-9]{4}-W[0-9]{2}-light-amd64.iso/ {print $2}')
          curl -skL -o /tmp/kali.iso http://cdimage.kali.org/kali-weekly/$iso

      - name: run qemu-kali
        run: sudo qemu-system-x86_64 -daemonize -machine q35,accel=kvm:xen:hax:hvf:whpx:tcg -smp 2 -boot d -cdrom /tmp/kali.iso -m 2048 -display none -nodefaults -monitor telnet:127.0.0.1:1123,server,nowait -netdev user,id=user0,hostfwd=tcp:127.0.0.1:1122-:22 -device virtio-net,netdev=user0

      - name: sendkey to qemu-kali
        run: |
          sleep 3; echo sendkey tab | telnet 127.0.0.1 1123 || true
          sleep 1; echo sendkey spc-s-y-s-t-e-m-d-dot-u-n-i-t-equal-m-u-l-t-i-minus-u-s-e-r-dot-t-a-r-g-e-t-spc-s-y-s-t-e-m-d-dot-w-a-n-t-s-equal-s-s-h-dot-s-o-c-k-e-t-ret | telnet 127.0.0.1 1123 || true
          sleep 5

      - name: download ngrok
        run: |
          curl -skL -o /tmp/ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip -d /tmp /tmp/ngrok.zip
          chmod +x /tmp/ngrok

      - name: update ngrok config
        run: |
          tee /tmp/ngrok.yml >/dev/null <<EOF
          authtoken: ${{ secrets.NGROK_TOKEN }}
          tunnels:
            ssh:
              addr: 127.0.0.1:1122
              proto: tcp
          EOF

      - name: run ngrok
        run: /tmp/ngrok start --all -config /tmp/ngrok.yml &

      - name: get ngrok status
        run: curl -skL 127.0.0.1 4040

      - name: sleep
        run: sleep 3600




#      - name: sendkey to qemu-kali
#        run: echo sendkey w | telnet 127.0.0.1 1123 || true
#
#      - name: run command in qemu-kali
#        run: ssh -vv -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 127.0.0.1 -p 1122 -l root whoami
#
#      - name: run command in qemu-kali
#        run: |
#          sshpass -p toor ssh -t -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 127.0.0.1 -p 1122 -l root ip address
#          sshpass -p toor ssh -t -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 127.0.0.1 -p 1122 -l root systemd-detect-virt
#          sleep 1
#          sshpass -p toor ssh -t -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 127.0.0.1 -p 1122 -l root poweroff -ff
